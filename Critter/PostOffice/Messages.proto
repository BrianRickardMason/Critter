message Header
{
    optional uint32 id = 1;
}

message Payload
{
    optional bytes payload = 1;
}

message Envelope
{
    optional Header  header  = 1;
    optional Payload payload = 2;
}

message CritterData
{
    optional string type = 1;
    optional string nick = 2;
}

message HeartbeatAnnouncement
{
    optional string      messageName = 1;
    optional CritterData sender      = 2;
    optional double      timestamp   = 3;
}

message PresentYourselfRequest
{
    optional string      messageName = 1;
    optional CritterData sender      = 2;
    optional CritterData receiver    = 3;
}

message PresentYourselfResponse
{
    optional string      messageName = 1;
    optional CritterData sender      = 2;
    optional CritterData receiver    = 3;
}

message PokeAnnouncement
{
    optional string      messageName = 1;
    optional CritterData sender      = 2;
}

message ExecuteGraphAnnouncement
{
    optional string      messageName = 1;
    optional CritterData sender      = 2;
    optional string      graphName   = 3;
}

// LoadGraphAndWorkRequest/Response: GraphYeeti -> Cribrarian -> GraphYeeti.

message GraphData
{
    optional string graphName = 1;
}

message WorkData
{
    optional string graphName = 1;
    optional string workName  = 2;
}

message WorkPredecessorData
{
    optional string workName            = 1;
    optional string predecessorWorkName = 2;
}

message LoadGraphAndWorkRequest
{
    optional string      messageName = 1;
    optional CritterData sender      = 2;
}

message LoadGraphAndWorkResponse
{
    optional string              messageName      = 1;
    optional CritterData         sender           = 2;
    optional CritterData         receiver         = 3;
    repeated GraphData           graphs           = 4;
    repeated WorkData            works            = 5;
    repeated WorkPredecessorData workPredecessors = 6;
}

// DetermineGraphCycleRequest/Response: GraphYeeti -> Cribrarian -> GraphYeeti.

message DetermineGraphCycleRequest
{
    optional string      messageName = 1;
    optional CritterData sender      = 2;
    optional string      graphName   = 3;
}

message DetermineGraphCycleResponse
{
    optional string      messageName = 1;
    optional CritterData sender      = 2;
    optional CritterData receiver    = 3;
    optional string      graphName   = 4;
    optional uint32      cycle       = 5;
}

// CommandWorkExecutionAnnouncement: GraphYeeti -> Balancer.

message CommandWorkExecutionAnnouncement
{
    optional string      messageName = 1;
    optional CritterData sender      = 2;
    optional string      graphName   = 3;
    optional uint32      cycle       = 4;
    optional string      workName    = 5;
}

// ExecuteWorkAnnouncement: Balancer -> Worker.

message ExecuteWorkAnnouncement
{
    optional string      messageName = 1;
    optional CritterData sender      = 2;
    optional CritterData receiver    = 3;
    optional string      graphName   = 4;
    optional uint32      cycle       = 5;
    optional string      workName    = 6;
}

// CantExecuteWorkNow: Worker -> Balancer.

message CantExecuteWorkNowAnnouncement
{
    optional string      messageName = 1;
    optional CritterData sender      = 2;
    optional CritterData receiver    = 3;
    optional string      graphName   = 4;
    optional uint32      cycle       = 5;
    optional string      workName    = 6;
}

// DetermineWorkCycleRequest/Response: Worker -> Cribrarian -> Worker.

message DetermineWorkCycleRequest
{
    optional string      messageName = 1;
    optional CritterData sender      = 2;
    optional string      graphName   = 3;
    optional uint32      cycle       = 4;
    optional string      workName    = 5;
}

message DetermineWorkCycleResponse
{
    optional string      messageName = 1;
    optional CritterData sender      = 2;
    optional CritterData receiver    = 3;
    optional string      graphName   = 4;
    optional uint32      cycle       = 5;
    optional string      workName    = 6;
    optional uint32      workCycle   = 7;
}

// ReportFinishedWorkAnnouncement: Worker -> GraphYeeti.

// TODO: Add missing information on whom inform about the result.

message ReportFinishedWorkAnnouncement
{
    optional string      messageName = 1;
    optional CritterData sender      = 2;
    optional string      graphName   = 3;
    optional uint32      graphCycle  = 4;
    optional string      workName    = 5;
    optional uint32      workCycle   = 6;
    optional bool        result      = 7;
}

// LoadWorkDetailsRequest/Response: Worker -> Cribrarian -> Worker.

message WorkDetailsData
{
    optional string workName = 1;
    optional uint32 dummy    = 2;
}

message LoadWorkDetailsRequest
{
    optional string      messageName = 1;
    optional CritterData sender      = 2;
}

message LoadWorkDetailsResponse
{
    optional string          messageName = 1;
    optional CritterData     sender      = 2;
    optional CritterData     receiver    = 3;
    repeated WorkDetailsData details     = 4;
}

//
// Graph execution.
//

//
// Criduler -> Criduler + GraphYeeti.
//
message ExecuteGraphSeekVolunteers
{
    optional string      messageName = 1;
    optional CritterData sender      = 2;
    optional string      hash        = 3;
}

//
// GraphYeeti -> Criduler.
//
message ExecuteGraphVoluntee
{
    optional string      messageName = 1;
    optional CritterData sender      = 2;
    optional CritterData receiver    = 3;
    optional string      hash        = 4;
}

//
// Criduler -> Criduler + GraphYeeti.
//
message ExecuteGraphSelectVolunteer
{
    optional string      messageName = 1;
    optional CritterData sender      = 2;
    optional CritterData receiver    = 3;
    optional string      hash        = 4;
    optional string      graphName   = 5;
}

//
// Work execution.
//

//
// GraphYeeti -> GraphYeeti + Balancer.
//
message CommandWorkExecutionSeekVolunteers
{
    optional string      messageName = 1;
    optional CritterData sender      = 2;
    optional string      hash        = 3;
}

//
// Balancer -> GraphYeeti.
//
message CommandWorkExecutionVoluntee
{
    optional string      messageName = 1;
    optional CritterData sender      = 2;
    optional CritterData receiver    = 3;
    optional string      hash        = 4;
}

//
// GraphYeeti -> GraphYeeti + Balancer.
//
message CommandWorkExecutionSelectVolunteer
{
    optional string      messageName = 1;
    optional CritterData sender      = 2;
    optional CritterData receiver    = 3;
    optional string      hash        = 4;
    optional string      graphName   = 5;
    optional uint32      graphCycle  = 6;
    optional string      workName    = 7;
}

//
// Graph execution.
//

//
// Criduler -> Criduler + GraphYeeti.
//
message Command_Req_ExecuteGraph
{
    optional string messageName = 1;
    optional string critthash   = 2;
    optional string graphName   = 3;
}

//
// GraphYeeti -> Criduler.
//
message Command_Res_ExecuteGraph
{
    optional string messageName = 1;
    optional string critthash   = 2;
}
